local player = game.Players.LocalPlayer

if game.PlaceId ~= 2262441883 then player:Kick("Wrong game, join the correct one.") end
if not game:IsLoaded() then game.Loaded:Wait() end
if player.PlayerGui:WaitForChild("Client").Menu.Catagories:FindFirstChild("5") then warn("No need to double inject my friend") return end

local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/0DevZero0/ElecStateLibrary/main/Library"))();lib:LoadLib()

local printersFolder = game:GetService("Workspace").MoneyPrinters
local entitiesFolder = game:GetService("Workspace").Entities

local cache = {
    toggles = {
        PChamsActive = false,
        SChamsActive = false,
        lootcrateFarm = false,
        AntiNlr = false,
        DeathReturn = false
    },
    debounces = {
        recentlyTpd = false
    },
    Printers = {
        stolen = {},
        beingCarried = {},
    },

    Shipments = {
        stolen = {},
        beingCarried = {},
    },
    Highlights = {
        PChams = {},
        SChams = {}
    },
    temp = {

    }
}

function TeleportPlayer(tpPoint, returnPos, offset)
    cache.debounces.recentlyTpd = true
    local character = player.Character or player.CharacterAdded:Wait()
    local humRP = character.HumanoidRootPart
    local lastPos = humRP.CFrame

    if typeof(tpPoint) == "CFrame" then
        humRP.CFrame = tpPoint + Vector3.new(0, offset, 0)
    elseif typeof(tpPoint) == "Instance" then
        humRP.CFrame = tpPoint.CFrame + Vector3.new(0, offset, 0)
    end
    task.wait(0.1)
    if returnPos then humRP.CFrame = lastPos end
    cache.debounces.recentlyTpd = false
end

function findClosest(folder, obj)
    cache.temp = {}
    for i, v in pairs(folder:GetChildren()) do
        local main = v:FindFirstChild(obj)
        if not main then continue end

        local dist = (player.Character.HumanoidRootPart.Position - main.Position).magnitude
        table.insert(cache.temp, {main, dist})
    end

    if #cache.temp <= 0 then return nil end
    table.sort(cache.temp, function(v1, v2) return v1[2] < v2[2] end)
    return cache.temp[1][1]
end

local ChamsTitle = lib.NewTitle("Chams", "Chams")
local chams = {
    PrinterChams = lib.NewToggle("PrinterChams", "Printer chams", function()
        cache.toggles.PChamsActive = not cache.toggles.PChamsActive
    end),
    
    ShipmentChams = lib.NewToggle("ShipmentChams", "Shipment chams", function()
        cache.toggles.SChamsActive = not cache.toggles.SChamsActive
    end)
}

local farmingTitle = lib.NewTitle("Farming", "Farming")
local farming = {
    lootcrate = lib.NewToggle("lootCrate", "Lootcrate farm", function()
        cache.toggles.lootcrateFarm = not cache.toggles.lootcrateFarm
    end)
}

local bypassTitle = lib.NewTitle("Bypasses", "Bypasses")
local bypasses = {
    antiNlr = lib.NewToggle("AntiNlr", "Anti nlr", function()
        cache.toggles.AntiNlr = not cache.toggles.AntiNlr
    end),
    deathReturn = lib.NewToggle("DeathReturn", "Return to death", function()
        cache.toggles.DeathReturn = not cache.toggles.DeathReturn
    end)
}

local teleportsTitle = lib.NewTitle("TeleportsT", "Teleports")
local Teleports = {
    tpScrap = lib.NewButton("Scrap", "Scrap yard", function()
        TeleportPlayer(CFrame.new(-1210.92786, 145.621948, 115.11441, -0.422592998, 0, 0.906319618, 0, 1, 0, -0.906319618, 0, -0.422592998), false, 3)
    end),
    
    tpLumber = lib.NewButton("Lumber", "Lumber yard", function()
        TeleportPlayer(CFrame.new(-406.894073, 166.621948, -1719.32507, -0.866007447, 0, 0.500031412, 0, 1, 0, -0.500031412, 0, -0.866007447), false, 3)
    end),
    
    tpFarm = lib.NewButton("Farm", "Farm", function()
        TeleportPlayer(CFrame.new(1218.09912, 318.121948, -2136.75488, -1, 0, 0, 0, 1, 0, 0, 0, -1), false, 3)
    end),
    
    tpConn = lib.NewButton("RepConn", "Repconn", function()
        TeleportPlayer(CFrame.new(1523.07214, 295.621948, 727.11438, -0.422592998, 0, 0.906319618, 0, 1, 0, -0.906319618, 0, -0.422592998), false, 3)
    end),
    
    tpMansion = lib.NewButton("Mansion", "Mansion", function()
        TeleportPlayer(CFrame.new(813.34259, 324.621948, -644.191833, -0.499959469, 0, 0.866048813, 0, 1, 0, -0.866048813, 0, -0.499959469), false, 3)
    end),
    
    tpSchool = lib.NewButton("School", "School", function()
        TeleportPlayer(CFrame.new(473.851501, 306.121948, -369.952148, -0.707134247, 0, 0.707079291, 0, 1, 0, -0.707079291, 0, -0.707134247), false, 3)
    end)
}

game:GetService("RunService").Heartbeat:Connect(function()
    if cache.toggles.PChamsActive then
        for i, v in ipairs(printersFolder:GetChildren()) do
            if not v:FindFirstChild("Main") then continue end
            if v.Main:FindFirstChild("Chams") then continue end
            local HL = Instance.new("Highlight", v.Main)
            HL.Name = "Chams"; HL.OutlineTransparency = 1; HL.FillColor = Color3.fromRGB(0, 255, 136)
            table.insert(cache.Highlights.PChams, HL)
        end
    else
        for i, v in pairs(cache.Highlights.PChams) do
            v:Destroy()
        end
    end

    if cache.toggles.SChamsActive then
        for i, v in ipairs(entitiesFolder:GetChildren()) do
            if v:FindFirstChild("MeshPart") and v:FindFirstChild("Int") and v.Int:FindFirstChild("Uses") and not v.MeshPart:FindFirstChild("Chams") then 
                if v.Int.Uses.Value <= 0 then continue end
                local HL = Instance.new("Highlight", v.MeshPart)
                HL.Name = "Chams"; HL.OutlineTransparency = 1; HL.FillColor = v.MeshPart.Color
                table.insert(cache.Highlights.SChams, HL)
            end
        end
    else
        for i, v in pairs(cache.Highlights.SChams) do
            v:Destroy()
        end
    end

    if cache.toggles.lootcrateFarm and not cache.debounces.recentlyTpd then
        local lootcrateFolder = workspace:FindFirstChild("Loot")
        if lootcrateFolder then
            local crate = findClosest(lootcrateFolder, "LootCrate")
            if crate then TeleportPlayer(crate, true, 3); game:GetService("ReplicatedStorage").Events.CratePickUpEvent:FireServer(crate.Parent) end
            print("Teleported")
        end
    end

    if cache.toggles.AntiNlr then
        local NLRCirc = workspace:FindFirstChild("NL")
        if NLRCirc then NLRCirc:Destroy() end
    end

    if cache.toggles.DeathReturn then
        local tmpChar = player.Character
        tmpChar.Humanoid.Died:Connect(function()
            local deathPos = tmpChar.HumanoidRootPart.CFrame
            tmpChar = player.CharacterAdded:Wait()
            local tmpHumRP = tmpChar:WaitForChild("HumanoidRootPart")

            tmpHumRP.Anchored = true
            TeleportPlayer(deathPos, false, 0); task.wait(0.25)
            tmpHumRP.Anchored = false
        end)
    end
end)


local version = lib.NewTitle("Version", "Alpha 0.3"); print("Ui name, ", version.Text)
